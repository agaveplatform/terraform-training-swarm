---
# Creates repositiores for each user. An impersonation token is first created, then
# used to generate the user repo.

- name: Get impersonation token for each user
  uri:
    url: "https://{{gitlab_host}}/api/v4/users/{{ item.json[0].id }}/impersonation_tokens"
    headers:
      Content-Type: application/json
      PRIVATE-TOKEN: "{{ gitlab_root_personal_token }}"
    method: POST
    validate_certs: False
    return_content: yes
    force_basic_auth: yes
    follow_redirects: yes
    body_format: json
    body: "{{ lookup('template', 'token.json') | to_json }}"
    status_code: 201
  register: gitlab_user_impersonation_token_response
  loop: "{{ gitlab_create_user_response.results }}"
  loop_control:
    index_var: training_user_idx
    label: "{{ item.json.username }}"
  ignore_errors: yes

- debug:
    var: gitlab_user_impersonation_token_response

- name: Adding user project based on importing training repository
  become: yes
  become_user: "{{ devops_linux_user }}"
  uri:
    url: "https://{{gitlab_host}}/api/v4/projects"
    headers:
      Content-Type: application/json
      PRIVATE-TOKEN: "{{ gitlab_user_impersonation_token_response.results[training_user_idx].token }}"
      namespace_id: "{{ item }}"
    method: POST
    validate_certs: False
    return_content: yes
    force_basic_auth: yes
    follow_redirects: yes
    body_format: json
    body: "{{ lookup('template', 'project.json') | to_json }}"
    status_code: 201
  register: gitlab_create_repository_response
  loop: "{{ training_users.split(',') | list }}"
  loop_control:
    index_var: training_user_idx
  ignore_errors: yes

- debug:
    var: gitlab_create_repository_response