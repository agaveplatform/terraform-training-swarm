---
# Sets a personal access token named 'ansible' for the `access_token_user_id` user.
# If a token is already present with that name, it is revoked. A new one is added
# in its place.

- name: Invalidate any existing ansible personal access tokens for the root user
  shell: docker-compose exec psql -U{{ gitlab_postgres_db_user }} {{ gitlab_postgres_db_name }} -c "update personal_access_tokens set revoked = true where user_id = {{ access_token_user_id }} and name = 'ansible'"
  args:
    chdir: "/home/{{ devops_linux_user }}/gitlab"

- name: Insert new ansible personal access token for the root user
  shell: docker-compose exec psql -U{{ gitlab_postgres_db_user }} {{ gitlab_postgres_db_name }} -c "insert into personal_access_tokens (user_id, token, name, revoked, expires_at, created_at, updated_at) VALUES ({{ access_token_user_id }}, '{{ gitlab_root_personal_access_token }}', 'ansible', false , '{{ "%Y-%m-%d %H:%M:%S" | strftime((ansible_date_time.epoch | int) + 63072000 ) }}', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
  args:
    chdir: "/home/{{ devops_linux_user }}/gitlab"


#- name: Update root personal access token
#  shell: docker-compose exec psql -U{{ gitlab_postgres_db_user }} {{ gitlab_postgres_db_name }} -c "update personal_access_tokens set token = {{ gitlab_root_personal_access_token }}, revoked = false, expires_at = '{{ '%Y-%m-%d %H:%M:%S' | strftime((ansible_date_time.epoch | int) + 63072000 ) }}', last_updated = CURRENT_TIMESTAMP where user_id = 1 and revoked = false"
#  args:
#    chdir: "/home/{{ devops_linux_user }}/gitlab"
#  when: "len(psql_user_personal_access_token.stdout_lines) == 3"
