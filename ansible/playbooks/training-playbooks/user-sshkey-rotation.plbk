---
# user-sshkey-rotation.plbk
# Run this playbook to install and configure something. 
#
# Assumptions:
# This playbook assumes the host has already been configured using the
# `../host-playbooks/docker-host.plbk` playbook.
#
# Varables:
# `clean_host`: If true, the host will be shot with a clean base configuration 
#
# Example invocation:
# ansible-playbook -i inventory playbooks/training-playbooks/user-sshkey-rotation.plbk
#
# TODO: rotating a key after a deployment means we need to update the following:
# - gitlab public key named, `sandbox`
# - docker swarm secrets for their training stack:
#    - {{ training_user }}-ssh-public-key
#    - {{ training_user }}-ssh-private-key
#    - {{ training_user }}-ssh-authorized_keys
# - user sandbox host with new ssh directory contents
# - the training user's agave storage and execution systems pointing to their sandbox host

- name: Generate and rotate ssh deployment keys on the remote host for each training user
  hosts: training_node
  become: yes
  become_user: "{{ devops_linux_user }}"
  gather_facts: true

  roles:
    - role: sshkeys
      vars:
        training_user: "{{ hostvars[inventory_hostname]['training_user'] }}"
        # User on the remote hosts, we'll ssh in as
        sshkeys_remote_user: "{{ devops_linux_user }}"
        sshkeys_remote_group: "{{ devops_linux_user }}"

        # Local and Remote ssh config directories to store
        # keys and authorized_keys files in
        sshkeys_local_dir: "{{ inventory_dir }}/keys/.ssh/{{ training_user }}"
        sshkeys_remote_dir: "/home/{{ devops_linux_user }}/training-sandbox/{{ training_user }}"

        # creates an authorized_keys file in the `sshkeys_local_dir`
        sshkeys_update_local_authorized_keys: True
      when:
        - "hostvars[inventory_hostname]['training_user'] is defined"
        - "hostvars[inventory_hostname]['training_user'] in training_users.split(',')"
      tags:
        - sshkeys